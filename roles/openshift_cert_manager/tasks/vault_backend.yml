- import_role:
    name: openshift_hashicorp_vault
    tasks_from: get_vault_route.yml

- import_role:
    name: openshift_common
    tasks_from: get_cluster_domain.yml

- name: Create HashiCorp Vault issuer
  kubernetes.core.k8s:
    template:
      - vault/cert-manager-token-static-secret.yaml
      - vault/vault-issuer-clusterissuer.yaml
      - vault/vault-issuer-test-certificate.yaml
    namespace: '{{ cert_manager_instance_namespace }}'

- name: Waiting since {{ lookup("pipe", "date +%r") }} for vault-issuer to become ready
  kubernetes.core.k8s_info:
    api_version: cert-manager.io/v1
    kind: ClusterIssuer
    name: vault-issuer
  register: wait_for_vault_issuer_result
  until:
    - wait_for_vault_issuer_result.resources.0.status.conditions is defined
    - wait_for_vault_issuer_result.resources.0.status.conditions | selectattr('type', 'equalto', 'Ready') | list | length > 0
    - (wait_for_vault_issuer_result.resources.0.status.conditions | selectattr('type', 'equalto', 'Ready') | first).status == "True"
  retries: 60
  delay: 10

- name: Retrieve the secret created by the operator
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    name: vault-issuer-test
    namespace: '{{ cert_manager_instance_namespace }}'
  register: cert_manager_test_secret
  until: cert_manager_test_secret.resources | length > 0
  retries: 120
  delay: 1

- name: Extract the certificate subject name
  command:
    cmd: openssl x509 -noout -subject
    stdin: '{{ cert_manager_test_secret.resources.0.data["tls.crt"] | b64decode }}'
  changed_when: false
  register: cert_manager_test_cert_subject

- name: Fail if the certificate subject is not correct
  fail:
  when: cert_manager_test_cert_subject.stdout != 'subject=CN = mytest.apps.' + openshift_common_cluster_domain
