- name: Deploy AWS EFS CSI operator
  kubernetes.core.k8s:
    template:
      - operator/aws-efs-csi-driver-operator-sub.yaml

- import_role:
    name: openshift_common
    tasks_from: wait_for_operator.yml
  vars:
    subscription_name: '{{ efs_operator_subscription_name }}'
    subscription_namespace: '{{ efs_operator_subscription_namespace }}'

- name: Create AWS EFS CSI driver instance
  kubernetes.core.k8s:
    template:
      - instance/efs.csi.aws.com-clustercsidriver.yaml

- name: Waiting since {{ lookup("pipe", "date +%r") }} for AWS EFS CSI driver instance to deploy
  kubernetes.core.k8s_info:
    api_version: operator.openshift.io/v1
    kind: ClusterCSIDriver
    name: efs.csi.aws.com
  register: efs_instance
  until:
    - efs_instance.resources is defined
    - efs_instance.resources | length > 0
    - efs_instance.resources.0.status is defined
    - efs_instance.resources.0.status.conditions is defined
    - efs_instance.resources.0.status.conditions | selectattr('type', 'equalto', 'AWSEFSDriverCredentialsRequestControllerAvailable') | list | length > 0
    - (efs_instance.resources.0.status.conditions | selectattr('type', 'equalto', 'AWSEFSDriverCredentialsRequestControllerAvailable') | first).status == "True"
    - efs_instance.resources.0.status.conditions | selectattr('type', 'equalto', 'AWSEFSDriverNodeServiceControllerAvailable') | list | length > 0
    - (efs_instance.resources.0.status.conditions | selectattr('type', 'equalto', 'AWSEFSDriverNodeServiceControllerAvailable') | first).status == "True"
    - efs_instance.resources.0.status.conditions | selectattr('type', 'equalto', 'AWSEFSDriverControllerServiceControllerAvailable') | list | length > 0
    - (efs_instance.resources.0.status.conditions | selectattr('type', 'equalto', 'AWSEFSDriverControllerServiceControllerAvailable') | first).status == "True"
  retries: 60
  delay: 10

- assert:
    that: efs_aws_file_system_id | length > 0
    fail_msg: "Variable 'efs_aws_file_system_id' must not be empty"

- name: Create AWS EFS CSI storageclass
  kubernetes.core.k8s:
    template:
      - instance/efs-csi-sc.yaml
    wait: true

- name: Create test volume
  kubernetes.core.k8s:
    template:
      - test/test-volume-pvc.yaml
    wait: true

- name: Waiting since {{ lookup("pipe", "date +%r") }} for test volume to bind
  kubernetes.core.k8s_info:
    api_version: v1
    kind: PersistentVolumeClaim
    name: test-volume
    namespace: '{{ efs_operator_subscription_namespace }}'
  register: test_volume_result
  until:
    - test_volume_result.resources.0.status is defined
    - test_volume_result.resources.0.status.phase is defined
    - test_volume_result.resources.0.status.phase is defined
    - test_volume_result.resources.0.status.phase == 'Bound'
  retries: 60
  delay: 5
