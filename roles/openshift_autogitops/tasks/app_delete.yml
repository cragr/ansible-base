- import_tasks: local_repo_create.yml

- set_fact:
    autogitops_app_env_dir:  '{{ autogitops_git_dir }}/envs/in-cluster/infra/{{ autogitops_app_name }}'

- name: Check if argocd_config_manual.yaml exists
  stat:
    path: '{{ autogitops_app_env_dir }}/argocd_config_manual.yaml'
  register: autogitops_app_argocd_config_stat_result

- name: Retrieve argocd_config_manual.yaml
  slurp:
    path: '{{ autogitops_app_env_dir }}/argocd_config_manual.yaml'
  register: autogitops_app_argocd_config_result
  when: autogitops_app_argocd_config_stat_result.stat.exists

- set_fact:
    autogitops_app_helm_dir: '{{ autogitops_git_dir }}/{{ (autogitops_app_argocd_config_result.content | b64decode | from_yaml).sourcePath }}'
  when: autogitops_app_argocd_config_stat_result.stat.exists

- set_fact:
    autogitops_app_helm_dir: ''
  when: not autogitops_app_argocd_config_stat_result.stat.exists

- name: Delete application helm template directory {{ autogitops_app_helm_dir }}/templates
  file:
    path: '{{ autogitops_app_helm_dir }}/templates'
    state: absent
  when: autogitops_app_helm_dir | length > 0

- name: Check if Chart.yaml exists
  stat:
    path: '{{ autogitops_app_helm_dir }}/Chart.yaml'
  register: autogitops_app_chart_stat_result
  when: autogitops_app_helm_dir | length > 0

- name: Retrieve application Chart.yaml
  slurp:
    path: '{{ autogitops_app_helm_dir }}/Chart.yaml'
  register: autogitops_app_chart_result
  when:
    - autogitops_app_helm_dir | length > 0
    - autogitops_app_chart_stat_result.stat.exists

- name: Remove dependencies from Chart.yaml
  copy:
    content: >-
      {{ autogitops_app_chart_result.content | b64decode | from_yaml | combine({"dependencies":[]}) | to_nice_yaml }}
    dest: '{{ autogitops_app_helm_dir }}/Chart.yaml'
  when:
    - autogitops_app_helm_dir | length > 0
    - autogitops_app_chart_stat_result.stat.exists

- import_tasks: local_repo_push.yml
  when: autogitops_app_helm_dir | length > 0

- name: Check if application {{ autogitops_app_name }} exists
  kubernetes.core.k8s_info:
    api_version: argoproj.io/v1alpha1
    kind: Application
    name: 'in-cluster-{{ autogitops_app_name }}'
    namespace: '{{ autogitops_argocd_namespace }}'
  register: autogitops_app_resource_result

- import_tasks: app_sync_delete.yml
  when: autogitops_app_resource_result.resources | length == 1

- name: Delete application directory {{ autogitops_app_helm_dir }}
  file:
    path: '{{ autogitops_app_helm_dir }}'
    state: absent
  when: autogitops_app_helm_dir | length > 0

- name: Delete application directory {{ autogitops_app_env_dir }}
  file:
    path: '{{ autogitops_app_env_dir }}'
    state: absent

- import_tasks: local_repo_push.yml

- name: Wait for application {{ autogitops_app_name }} to disappear from Argo CD
  kubernetes.core.k8s_info:
    api_version: argoproj.io/v1alpha1
    kind: Application
    name: 'in-cluster-{{ autogitops_app_name }}'
    namespace: '{{ autogitops_argocd_namespace }}'
  register: autogitops_app_resource_result
  when: autogitops_git_updated
  until:
    - autogitops_app_resource_result.resources | length == 0
  retries: 60
  delay: 1
