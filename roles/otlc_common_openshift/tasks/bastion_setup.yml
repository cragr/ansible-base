- name: Restore the default settings in rhsm.conf
  ini_file:
    path: /etc/rhsm/rhsm.conf
    section: '{{ item.section }}'
    option: '{{ item.option }}'
    value: '{{ item.value }}'
  loop:
    - { section: 'server', option: 'prefix', value: '/subscription' }
    - { section: 'server', option: 'hostname', value: 'subscription.rhsm.redhat.com' }
    - { section: 'server', option: 'port', value: '443' }
    - { section: 'rhsm',   option: 'baseurl', value: 'https://cdn.redhat.com' }
    - { section: 'rhsm',   option: 'repo_ca_cert', value: '%(ca_cert_dir)sredhat-uep.pem' }
    - { section: 'rhsm',   option: 'full_refresh_on_yum', value: 0 }
  become: true

- name: Clean up the pre-existing Red Hat subscription
  command: subscription-manager clean
  become: true

- name: Enable required RHEL repositories
  community.general.rhsm_repository:
    name:
      - rhel-7-server-ose-4.5-rpms
    state: enabled
  when: ansible_distribution_major_version is version('7', '==')
  become: true

- name: Enable required RHEL repositories
  community.general.rhsm_repository:
    name:
      - rhocp-4.6-for-rhel-8-x86_64-rpms
    state: enabled
  when: ansible_distribution_major_version is version('8', '==')
  become: true

- name: Check if EPEL repo is already configured
  stat:
    path: '{{ epel_repofile_path }}'
  register: epel_repofile_result

- name: Import EPEL GPG key
  rpm_key:
    key: '{{ epel_repo_gpg_key_url }}'
  when: not epel_repofile_result.stat.exists
  become: true

- name: Install EPEL repo
  yum:
    name: '{{ epel_repo_url }}'
  register: result
  when: not epel_repofile_result.stat.exists
  become: true

- name: Install Python packages distributed with RHEL and required by Ansible modules
  yum:
    name:
      - python2-pip
      - python2-boto3
  become: true
  when: ansible_distribution_major_version is version('7', '==')

- name: Install Python packages distributed with RHEL
  yum:
    name:
      - python3-pip
      - python3-boto3
  become: true
  when: ansible_distribution_major_version is version('8', '==')

- name: Install latest Python packages required by Ansible modules
  pip:
    name:
      - kubernetes
      - openshift
  become: true

- name: Ensure ~/.aws directory exists
  file:
    path: .aws
    state: directory

- name: Create AWS credentials file
  template:
    src: aws_credentials
    dest: .aws/credentials
