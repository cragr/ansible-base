- name: Obtain credential-keycloak secret
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    name: credential-keycloak
    namespace: '{{ rhsso_instance_namespace }}'
  register: keycloak_secret

- set_fact:
    rhsso_username: '{{ keycloak_secret.resources.0.data.ADMIN_USERNAME | b64decode }}'
    rhsso_password: '{{ keycloak_secret.resources.0.data.ADMIN_PASSWORD | b64decode }}'
    rhsso_hostname: '{{ keycloak_route.resources.0.spec.host }}'

- import_tasks: get_access_token.yml

- name: Obtain list of users including their ids
  uri:
    url: 'https://{{ rhsso_hostname }}/auth/admin/realms/master/users'
    headers:
      Authorization: bearer {{ rhsso_access_token }}
    validate_certs: false
    status_code: [ 200 ]
  register: user_list_result
  when: rhsso_access_token is defined

- set_fact:
    admin_user_id: '{{ (user_list_result.json | selectattr("username", "equalto", rhsso_username) | first).id }}'
  when: rhsso_access_token is defined

- name: Change admin user password in Keycloak
  uri:
    url: 'https://{{ rhsso_hostname }}/auth/admin/realms/master/users/{{ admin_user_id }}/reset-password'
    method: PUT
    headers:
      Authorization: bearer {{ rhsso_access_token }}
    body_format: json
    body:
      type: password
      temporary: false
      value: '{{ generic_user_password }}'
    validate_certs: false
    status_code: [ 204 ]
  when: rhsso_access_token is defined

- name: Change admin user password in Kubernetes secret
  kubernetes.core.k8s:
    template: credentials-keycloak-secret.yaml
